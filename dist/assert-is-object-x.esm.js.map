{"version":3,"sources":["../src/assert-is-object-x.js"],"names":[],"mappings":"AAAA,OAAO,YAAP,MAAyB,+BAAzB;AACA,OAAO,WAAP,MAAwB,cAAxB;AAEA;;;;;;;;;AAQA,eAAe,SAAS,cAAT,CAAwB,KAAxB,EAA+B;AAC5C,MAAI,WAAW,CAAC,KAAD,CAAf,EAAwB;AACtB,UAAM,IAAI,SAAJ,WAAiB,YAAY,CAAC,KAAD,CAA7B,uBAAN;AACD;;AAED,SAAO,KAAP;AACD","file":"assert-is-object-x.esm.js","sourcesContent":["import safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive';\n\n/**\n * Tests `value` to see if it is an object, throws a `TypeError` if it is\n * not. Otherwise returns the `value`.\n *\n * @param {*} value - The argument to be tested.\n * @throws {TypeError} Throws if `value` is not an object.\n * @returns {*} Returns `value` if it is an object.\n */\nexport default function assertIsObject(value) {\n  if (isPrimitive(value)) {\n    throw new TypeError(`${safeToString(value)} is not an object`);\n  }\n\n  return value;\n}\n"]}